######
# Service level definition. Here `analytics-integration` is a single service catering
# to various ingestion processes via multiple lambdas
######
service: algo-trader

######
# Plugins are specific to severless and are required for customisations across
# serverless implementation for various use-cases
# - serverless-python-requirements: Required for python packaging using Docker
# - serverless-aws-alias: Required for aliasing serverless stacks across stages
# - serverless-plugin-scripts: To hook onto hooks of serverless and define custom commands
######
plugins:
  - serverless-python-requirements
  - serverless-plugin-scripts
package:
    individually: true
    patterns:
        # Explicitly excluding everything here so that each function only
        # gets the relevant content
        - '!./**'

######
# Provider definition, which is AWS for everything that we do. This contains configuration
# definition from an overall perspective. Most of the configurations here are overridable
# within each function definition
######
provider:
    name: aws
    stage: ${opt:stage, "beta"} # Default stage
    region: ${opt:region, "us-east-1"}
    runtime: python3.8
    logRetentionInDays: 7 # in days
    deploymentBucket:
        name: algo-trader-meta
        serverSideEncryption: AES256
    versionFunctions: true
    tags:
        resource-group: ${self:service}
        resource-env: ${self:provider.stage}
    # Note: following are the subnets and security groups for production VPC
    # hence the deployment won't be successful on every stage
    # TODO: Reference terraform resources as compared to hard-coding them
    vpc:
        securityGroupIds:
            - sg-04dd052b7fdf7b02c
        subnetIds:
            - subnet-0939887dfb730b965
            - subnet-05e81581d2d6e7ac4
    iam:
        role: arn:aws:iam::326543489242:role/${self:provider.stage}-options-trader-lambda-role

custom:
    # Following customization is required to incorporate packages
    # with binaries which do not get generated correctly, hence a
    # base docker image is used (provided by serverless), to create
    # such packages
    pythonRequirements:
        # Following is being used to bypass the issues with pip 21.0 in the original image
        # which causes a lot of issues with dependency resolution of modules, resulting in failure.
        # The following image upgrades pip to latest i.e. 22.x to solve for the above issues.
        dockerFile: ./Dockerfile
        dockerizePip: non-linux
        dockerSsh: true # To support private libraries installation

######
# All lambda functions definitions. Here we override certain configurations (if required)
######
functions:
    options-trader:
        handler: run.lambda_handler
        name: ${self:provider.stage}-${self:service}_options-trader
        # TODO: Reference terraform resources as compared to hard-coding them
        role: arn:aws:iam::326543489242:role/${self:provider.stage}-options-trader-lambda-role
        memorySize: 128  # in MBs
        description: Trades options on a daily basis
        timeout: 300  # in seconds
        tags:
            resource-name: options-trader
        package:
            patterns:
                - src/**
                - run.py
                - settings.py
                - requirements.txt
        environment:
            ENVIRONMENT: ${self:provider.stage}
            CACHE_TYPE: memory
